name: release

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    tags:
      - "v*"

permissions:
  contents: write
  packages: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        if: github.event_name == 'pull_request'
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
      - uses: actions/checkout@v3
        if: github.event_name == 'push'
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.18
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Cosign
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: "v1.13.1"
      - name: Setup Cosign
        run: |
          echo "${COSIGN_KEY}" > "$GITHUB_WORKSPACE/cosign.key"
        env:
          COSIGN_KEY: ${{ secrets.COSIGN_KEY }}
      - name: Set GoReleaser Default Args
        if: startsWith(github.ref, 'refs/tags/') == true
        run: |
          echo "GORELEASER_ARGS=" >> $GITHUB_ENV
      - name: Set GoReleaser Options for Branch
        if: startsWith(github.ref, 'refs/tags/') == false
        run: |
          echo "GORELEASER_ARGS=--snapshot" >> $GITHUB_ENV
      - name: Set GoReleaser Options for Renovate
        if: startsWith(github.ref, 'refs/heads/renovate') == true
        run: |
          echo "GORELEASER_ARGS=--snapshot --skip-publish" >> $GITHUB_ENV
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist ${{ env.GORELEASER_ARGS }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
      - name: Push Docker Images (for branches)
        if: github.ref == 'refs/heads/master' || github.event.pull_request.base.ref == 'master'
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
          docker images --format "{{.Repository}}:{{.Tag}}" | grep "${{ github.repository }}" | xargs -L1 docker push
      - uses: actions/upload-artifact@v3
        with:
          name: releases
          path: |
            releases/default_windows_*/file_exporter.exe
      - id: version
        run: |
          echo "version=$(cat releases/metadata.json | jq -r '.version')" >> $GITHUB_OUTPUT
          echo "windows=$(cat releases/metadata.json | jq -r '.version | split("-") | if length == 1 then .[0] else ([.[0],.[1]] | join(".") | sub("rc"; "")) end')" >> $GITHUB_OUTPUT
    outputs:
      version: ${{ steps.version.outputs.version }}
      windows-version: ${{ steps.version.outputs.windows }}

  msi:
    runs-on: windows-latest
    needs:
      - goreleaser
    strategy:
      matrix:
        arch:
          - amd64
          - "386"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: releases
          path: releases
      - if: matrix.arch == 'amd64'
        run: .\package\windows\build.ps1 -PathToExecutable .\releases\default_windows_${{ matrix.arch }}_v1\file_exporter.exe -Version ${{ needs.goreleaser.outputs.version }} -WindowsVersion ${{ needs.goreleaser.outputs.windows-version }} -Arch ${{ matrix.arch }}
        shell: powershell
      - if: matrix.arch == '386'
        run: .\package\windows\build.ps1 -PathToExecutable .\releases\default_windows_${{ matrix.arch }}\file_exporter.exe -Version ${{ needs.goreleaser.outputs.version }} -WindowsVersion ${{ needs.goreleaser.outputs.windows-version }} -Arch ${{ matrix.arch }}
        shell: powershell
      - run: Move-Item .\package\windows\Output\file_exporter-${{ needs.goreleaser.outputs.version }}-${{ matrix.arch }}.msi .\releases\file_exporter_${{ needs.goreleaser.outputs.version }}_windows_${{ matrix.arch }}.msi
        shell: powershell
      - uses: actions/upload-artifact@v3
        with:
          name: releases
          path: releases/*
      - name: Upload binaries to release
        if: startsWith(github.ref, 'refs/tags/') == true
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: releases\file_exporter_${{ needs.goreleaser.outputs.version }}_windows_${{ matrix.arch }}.msi
          asset_name: file_exporter_${{ needs.goreleaser.outputs.version }}_windows_${{ matrix.arch }}.msi
          tag: ${{ github.ref }}
          overwrite: true
