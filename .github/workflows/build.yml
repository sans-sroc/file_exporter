name: build

on:
  push:
    branches:
      - master
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Generate Version
        id: version
        run: echo ::set-output name=version::$(.ci/version)
      - name: Generate Windows Version
        id: windows-version
        env:
          SEP: "."
          NOREV: "true"
          RCTOBUILD: "true"
        run: echo ::set-output name=version::$(.ci/version)
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.16.x
      - name: "build"
        run: |
          make release-all
      - uses: actions/upload-artifact@v3
        with:
          name: release
          path: release/*
    outputs:
      version: ${{ steps.version.outputs.version }}
      windows-version: ${{ steps.windows-version.outputs.version }}

  build-msi:
    runs-on: windows-latest
    needs:
      - build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: release
          path: release
      - run: .\package\windows\build.ps1 -PathToExecutable .\release\file_exporter_${{ needs.build.outputs.version }}-amd64.exe -Version ${{ needs.build.outputs.windows-version }} -Arch amd64
        shell: powershell
      - run: Move-Item .\package\windows\Output\file_exporter-${{ needs.build.outputs.windows-version }}-amd64.msi .\release\
        shell: powershell
      - uses: actions/upload-artifact@v3
        with:
          name: release
          path: release/*

  release:
    runs-on: ubuntu-latest
    needs:
      - build
      - build-msi
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: release
          path: release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Assets
        id: upload-release-assets
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
          assets_path: release/
